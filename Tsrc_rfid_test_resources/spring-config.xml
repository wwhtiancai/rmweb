<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:hdp="http://www.springframework.org/schema/hadoop" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
       default-lazy-init="false">

    <description>Spring测试配置 </description>
    <context:annotation-config />

    <context:component-scan base-package="com.tmri"><!-- 多个不同的包路径，用,分割。 -->
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:runtime.properties</value>
                <value>classpath:config.properties</value>
            </list>
        </property>
        <property name="searchSystemEnvironment" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <bean id="transactionMan"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"><ref local="dataSource"/></property>
    </bean>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"><ref local="dataSource"/></property>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*"  read-only="true" />
            <tx:method name="*insert*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="*update*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="*delete*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="*save*"   propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="*write*"  propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <bean id="transactionManagerZp"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"><ref local="dataSourcePhoto"/></property>
    </bean>

    <tx:advice id="txAdvicePhoto" transaction-manager="transactionManagerZp">
        <tx:attributes>
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*"  read-only="true" />
            <tx:method name="insert*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="save*"   propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="write*"  propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="txPointcut" expression="execution(* com.tmri.*.service..*.*(..)) or execution(* com.tmri.*.*.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
    </aop:config>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="txPointcutPhoto" expression="execution(* com.tmri.*.service..*.*(..)) or execution(* com.tmri.*.*.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvicePhoto" pointcut-ref="txPointcutPhoto" />
    </aop:config>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName"><value>${jdbc.driver}</value></property>
        <property name="url"><value>${jdbc.url}</value></property>
        <property name="username"><value>${jdbc.username}</value></property>
        <property name="password"><value>${jdbc.password}</value></property>
        <property name="maxActive"><value>80</value></property>
        <property name="maxIdle"><value>20</value></property>
        <property name="maxWait"><value>20</value></property>
        <property name="removeAbandoned"><value>false</value></property>
        <property name="removeAbandonedTimeout"><value>30</value></property>
        <property name="testOnBorrow"><value>true</value></property>
        <property name="logAbandoned"><value>false</value></property>
    </bean>

    <bean id="dataSourcePhoto" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName"><value>${jdbc.driver}</value></property>
        <property name="url"><value>${jdbc.url}</value></property>
        <property name="username"><value>${jdbc.username}</value></property>
        <property name="password"><value>${jdbc.password}</value></property>
        <property name="maxActive"><value>40</value></property>
        <property name="maxIdle"><value>10</value></property>
        <property name="maxWait"><value>20</value></property>
        <property name="removeAbandoned"><value>false</value></property>
        <property name="removeAbandonedTimeout"><value>30</value></property>
        <property name="testOnBorrow"><value>true</value></property>
        <property name="logAbandoned"><value>false</value></property>
    </bean>

    <bean name="jdbcTemplate" class="com.tmri.share.ora.FrmJdbcTemplate">
        <property name="dataSource"><ref local="dataSource"/></property>
    </bean>

    <bean name="jdbcTemplatecs" class="com.tmri.share.ora.FrmJdbcTemplate">
        <property name="dataSource"><ref bean="dataSource"/></property>
    </bean>
    <bean name="jdbcTemplateZp" class="com.tmri.share.ora.FrmJdbcTemplate">
        <property name="dataSource"><ref bean="dataSourcePhoto"/></property>
    </bean>
    <bean name="jdbcTemplatecsZp" class="com.tmri.share.ora.FrmJdbcTemplate">
        <property name="dataSource"><ref bean="dataSourcePhoto"/></property>
    </bean>

    <bean name="jdbcTemplateTrff" class="com.tmri.share.ora.FrmJdbcTemplate">
        <property name="dataSource"><ref local="dataSource"/></property>
    </bean>

    <bean id="rmWebCacheService" class="com.tmri.cache.service.impl.WebCacheServiceImpl" init-method="init"/>

    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
          lazy-init="true" />
    <bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"/>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tmri.rfid.mapper"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatisConfig.xml"/>
    </bean>

    <bean id="checkLoginFilter" class="com.tmri.rfid.filter.CheckLoginFilter">
        <property name="ignoreList">
            <list>
                <value>/be/login.rfid</value>
                <value>/login.frm</value>
                <value>/index.jsp</value>
                <value>/ex/*</value>
            </list>
        </property>
        <property name="timeout" value="${session.timeout}"/>
    </bean>

    <aop:aspectj-autoproxy proxy-target-class="true" />

    <bean id="tmriJaxRpcOutNewAccessServiceStub" class="com.tmri.rfid.webservice.TmriJaxRpcOutNewAccessServiceStub">
        <constructor-arg name="targetEndpoint">
            <value>${remote.fetch.vehicle.endpoint}</value>
        </constructor-arg>
        <constructor-arg name="httpClient">
            <ref bean="httpClient"/>
        </constructor-arg>
    </bean>

    <bean id="manager" class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager"/>

    <bean id="httpClient" class="org.apache.commons.httpclient.HttpClient">
        <property name="httpConnectionManager" ref="manager"/>
    </bean>
</beans>